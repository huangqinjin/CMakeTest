cmake_minimum_required(VERSION ${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION})
set(LANGUAGES C CXX ASM)
project(CMakeTest ${LANGUAGES})

set(CMAKE_BUILD_RPATH_USE_ORIGIN ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_CXX_STANDARD 20)

set(host_system_vars
    CMAKE_VERSION
    CMAKE_CROSSCOMPILING
    CMAKE_HOST_SYSTEM_NAME
    CMAKE_HOST_SYSTEM_VERSION
    CMAKE_HOST_SYSTEM
    CMAKE_HOST_SYSTEM_PROCESSOR
    CMAKE_HOST_WIN32
    CMAKE_HOST_UNIX
    CMAKE_HOST_APPLE
)

set(target_system_vars
    CMAKE_SYSTEM_NAME
    CMAKE_SYSTEM_VERSION
    CMAKE_SYSTEM
    CMAKE_SYSTEM_PROCESSOR
    CMAKE_SIZEOF_VOID_P
    WIN32
    UNIX
    APPLE
    IOS
    CYGWIN
    ANDROID
    WINDOWS_STORE
    CMAKE_ANDROID_API
    CMAKE_ANDROID_ARCH
    CMAKE_ANDROID_ARCH_ABI
    CMAKE_ANDROID_NDK_VERSION
)

set(generator_vars
    CMAKE_GENERATOR
    CMAKE_GENERATOR_INSTANCE
    CMAKE_GENERATOR_PLATFORM
    CMAKE_GENERATOR_TOOLSET
    CMAKE_MAKE_PROGRAM
    MSYS
    XCODE
    XCODE_VERSION
    MSVC_IDE
    CMAKE_VS_PLATFORM_NAME
    CMAKE_VS_PLATFORM_TOOLSET
    CMAKE_VS_PLATFORM_TOOLSET_VERSION
    CMAKE_XCODE_BUILD_SYSTEM
    CMAKE_XCODE_PLATFORM_TOOLSET
)

set(paths_vars
    CMAKE_SYSROOT
    CMAKE_SYSROOT_COMPILE
    CMAKE_SYSROOT_LINK
    CMAKE_SYSTEM_PREFIX_PATH
    CMAKE_SYSTEM_PROGRAM_PATH
    CMAKE_SYSTEM_INCLUDE_PATH
    CMAKE_SYSTEM_LIBRARY_PATH
    CMAKE_PREFIX_PATH
    CMAKE_PROGRAM_PATH
    CMAKE_INCLUDE_PATH
    CMAKE_LIBRARY_PATH
    CMAKE_FIND_ROOT_PATH
    CMAKE_MODULE_PATH
    CMAKE_INSTALL_PREFIX
    CMAKE_STAGING_PREFIX
    CMAKE_TOOLCHAIN_FILE
    CMAKE_ANDROID_NDK
)

set(binutils_vars
    CMAKE_LINKER
    CMAKE_AR
    CMAKE_AS
    CMAKE_NM
    CMAKE_RANLIB
    CMAKE_STRIP
    CMAKE_OBJDUMP
    CMAKE_OBJCOPY
    CMAKE_READELF
    CMAKE_ADDR2LINE
    CMAKE_DLLTOOL
    CMAKE_MT
    CMAKE_RC_COMPILER
)

set(build_vars
    MSVC
    MINGW

    CMAKE_DL_LIBS
    CMAKE_MSVC_RUNTIME_LIBRARY

    CMAKE_GET_RUNTIME_DEPENDENCIES_PLATFORM
    CMAKE_GET_RUNTIME_DEPENDENCIES_TOOL
    CMAKE_GET_RUNTIME_DEPENDENCIES_COMMAND

    BUILD_SHARED_LIBS
    CMAKE_BUILD_TYPE
    CMAKE_CONFIGURATION_TYPES
    CMAKE_DEBUG_POSTFIX
    CMAKE_RELEASE_POSTFIX
    CMAKE_RELWITHDEBINFO_POSTFIX

    CMAKE_EXECUTABLE_SUFFIX
    CMAKE_IMPORT_LIBRARY_PREFIX
    CMAKE_IMPORT_LIBRARY_SUFFIX
    CMAKE_STATIC_LIBRARY_PREFIX
    CMAKE_STATIC_LIBRARY_SUFFIX
    CMAKE_SHARED_LIBRARY_PREFIX
    CMAKE_SHARED_LIBRARY_SUFFIX
    CMAKE_SHARED_MODULE_PREFIX
    CMAKE_SHARED_MODULE_SUFFIX

    CMAKE_ARCHIVE_OUTPUT_DIRECTORY
    CMAKE_LIBRARY_OUTPUT_DIRECTORY
    CMAKE_RUNTIME_OUTPUT_DIRECTORY
    CMAKE_PDB_OUTPUT_DIRECTORY
    CMAKE_COMPILE_PDB_OUTPUT_DIRECTORY

    CMAKE_STATIC_LINKER_FLAGS
    CMAKE_STATIC_LINKER_FLAGS_DEBUG
    CMAKE_STATIC_LINKER_FLAGS_DEBUG_INIT
    CMAKE_STATIC_LINKER_FLAGS_RELEASE
    CMAKE_STATIC_LINKER_FLAGS_RELEASE_INIT
    CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
    CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO_INIT

    CMAKE_SHARED_LINKER_FLAGS
    CMAKE_SHARED_LINKER_FLAGS_DEBUG
    CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT
    CMAKE_SHARED_LINKER_FLAGS_RELEASE
    CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT
    CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
    CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT

    CMAKE_MODULE_LINKER_FLAGS
    CMAKE_MODULE_LINKER_FLAGS_DEBUG
    CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT
    CMAKE_MODULE_LINKER_FLAGS_RELEASE
    CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT
    CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
    CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT

    CMAKE_EXE_LINKER_FLAGS
    CMAKE_EXE_LINKER_FLAGS_DEBUG
    CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT
    CMAKE_EXE_LINKER_FLAGS_RELEASE
    CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT
    CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
    CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT
)

set(lang_vars
    COMPILER_ID
    COMPILER_VERSION
    SIMULATE_ID
    SIMULATE_VERSION
    SIZEOF_DATA_PTR
    LIBRARY_ARCHITECTURE
    BYTE_ORDER
    COMPILER
    COMPILER_ARG1
    COMPILER_TARGET
    COMPILER_EXTERNAL_TOOLCHAIN
    FLAGS
    FLAGS_DEBUG
    FLAGS_DEBUG_INIT
    FLAGS_RELEASE
    FLAGS_RELEASE_INIT
    FLAGS_RELWITHDEBINFO
    FLAGS_RELWITHDEBINFO_INIT
    STANDARD_INCLUDE_DIRECTORIES
    STANDARD_LIBRARIES
    IMPLICIT_INCLUDE_DIRECTORIES
    IMPLICIT_LINK_DIRECTORIES
    IMPLICIT_LINK_LIBRARIES
    LINKER_WRAPPER_FLAG
    LINKER_WRAPPER_FLAG_SEP
    COMPILE_OBJECT
    ARCHIVE_CREATE
    ARCHIVE_APPEND
    ARCHIVE_FINISH
    CREATE_STATIC_LIBRARY
    CREATE_SHARED_LIBRARY
    CREATE_SHARED_MODULE
    LINK_EXECUTABLE
)


foreach(var IN LISTS host_system_vars target_system_vars generator_vars paths_vars binutils_vars build_vars)
    message(STATUS "${var}=\"${${var}}\"")
endforeach()

foreach(lang IN LISTS LANGUAGES)
    foreach(var IN LISTS lang_vars)
        set(var CMAKE_${lang}_${var})
        message(STATUS "${var}=\"${${var}}\"")
    endforeach()
endforeach()



add_library(greet SHARED greet.cpp)
set_target_properties(greet PROPERTIES
    POSITION_INDEPENDENT_CODE ON
    C_VISIBILITY_PRESET hidden
    CXX_VISIBILITY_PRESET hidden
    VISIBILITY_INLINES_HIDDEN ON
)

add_executable(app main.cpp)
target_link_libraries(app PRIVATE greet)


enable_testing()
add_test(NAME App WORKING_DIRECTORY $<TARGET_FILE_DIR:app> COMMAND app ${CMAKE_MAJOR_VERSION} ${CMAKE_MINOR_VERSION})


if(ANDROID)
    set(files [[]])
    find_library(lib NAMES ${CMAKE_ANDROID_STL_TYPE} ${ANDROID_STL})
    if (lib AND lib MATCHES [[.*\.so$]])
        list(APPEND files ${lib})
    endif()

    if(files)
        add_custom_command(TARGET app POST_BUILD COMMAND_EXPAND_LISTS COMMAND
            ${CMAKE_COMMAND} -E copy_if_different ${files} $<TARGET_FILE_DIR:app>
        )
    endif()
endif()

if(ANDROID AND CMAKE_CROSSCOMPILING_EMULATOR)
    file(DOWNLOAD
        https://www.nuget.org/api/v2/package/android-exe-launcher/33.5.0
        ${CMAKE_BINARY_DIR}/android-exe-launcher.nupkg
        EXPECTED_HASH SHA512=3a38453c8495b5f814e42256008adc8704acf1df2cca783797b8a0124d8a2392e492c9f8839498b26538b067270f71ad8c0bc2f9f57b6f7926d75f4e7dd13823
    )

    file(ARCHIVE_EXTRACT
        INPUT ${CMAKE_BINARY_DIR}/android-exe-launcher.nupkg
        DESTINATION ${CMAKE_BINARY_DIR}/android-exe-launcher
    )
endif()
